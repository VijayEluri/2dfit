class Runner
{
    public static GeometryFactory geometryFactory = null;
    public static GUIOutput gui = null;
    public static void main(String args[]) throws java.lang.InterruptedException{
	
	gui = new GUIOutput();
	javax.swing.SwingUtilities.invokeLater(new Runnable() {
		public void run() {
		    gui.run();
		}
 	    });
	while(gui.getRenderer() == null){
	    
	}
 	//gui.run();
 	geometryFactory = new GeometryFactory();
	Util.geometryFactory = geometryFactory;
 	//while (gui.getRenderer() == null){
 	//    int x = 1;	
 	renderGeometry();
     }

     public static void renderGeometry() {
 	//Coordinate ptc = new Coordinate(14.0d, 14.0d);	
 	Renderer renderer = gui.getRenderer();
 	/*renderer.setLinearRing(makeTriangle(new Coordinate(0, 0), new Coordinate(400, 400), new Coordinate(400, 0)), 1);
	  renderer.setLinearRing(makeSquare(100), 2);*/
	int offset = 2;
	LinearRing shape = Util.makeS2(200);//makeSquare(200);
	renderer.setLinearRing(shape, 0);
	Vector<LinearRing> shapes = Util.decomposeTriangles(shape, 1);
	System.out.println("number of shapes:" + shapes.size());
	for(int i = 0; i < shapes.size() && i + offset < renderer.NumberOfObjects; i++){
	    if(i < 1){
		continue;
	    }
	    renderer.setLinearRing(shapes.get(i), i + offset);
	}
    }


    
    
}